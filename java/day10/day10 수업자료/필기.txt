국비

Zoom 회의 참가
https://us06web.zoom.us/j/6633076301?pwd=dWNHUy9icnFhMjFqVFFjNEl0TUVjUT09

회의 ID: 663 307 6301
암호: 0900k

[공지]
* 대면시 개인 노트북 사용 가능   
* 개인이 환경 설치 가능해야합니다   
* 장소 : 서울 강남시 테헤란로 26길 12 (제일비전타워) 13층 K강의장
*과정명 : 임베디드 소프트웨어 융합 풀스택 개발자 양성과정A(14일 ~ 21일)
*교재 : 주말  9시 30~ 18시
*평일 : 17시 50분 ~ 19시
*코로나로 인한 대리수령 가능
*3월 21일 교재
 택배 : 역삼1동 우체국, 박스비는 4호(1,300 원)

ㅇ교재 수령 가능 기간
- 03.14.(월) ~ 03.21.(월) 

ㅇ교재 수령 가능 시간
 - 평일: 09:00~21:00
 - 주말: 09:00~17:00

ㅇ교재 방문 수령
 1) 본관 3층 인포데스크 방문
 2) 교재 수량 확인
   1. NCS모듈교재 15권
   2. 시중교재 7권
 3) 배포확인서 서명
※ 반드시 정자로 서명 부탁드립니다 ※

* 교재가 많이 무겁습니다. 
담아가실 수 있는 가방 꼭 챙겨오시길 바랍니다.

[대면]
 3월 21일 월(8)
 정송화 김대훈 김태경

 3월 23일 수(8)
 박종휘 김민수 김강영

 3월 24일 목
 박종휘 박지윤 김시우 정유섭 조혜진
 김태휴 박준호 문기연 김강영

 3월 25일 금(8)
 박종휘 김민수 김강영
---------------------------------------------------------------------------------------------------------------
tms : https://itgn.cafe24.com/student/index.php
일시 : 2022-03-22(화요일, 전면 비대면)
 - 네트워크 프로그래밍 구현(오전, 9시 30분 ~ 11시 50분:2시간 20분)
	-> java 기본 연산자
	-> 반복, 제어문
 - SQL활용(오후,2시 10분 ~ 5시 10분:3시간)
	-> 중간체크 이후
	-> 반복, 제어문
	-> 배열
---------------------------------------------------------------------------------------------------------------
다음시험 : 2022-03-30
---------------------------------------------------------------------------------------------------------------
자바프로젝트 - iamkj8812@gmail.com
 이름, 프로젝트 주제
 3월 23일 수업 끝나기 전까지
--------------------------------------------------------------------------------------------------------------
1. 다형성 - 오버라이드
   - 클래스 다이어그램에서 육군(Army), 해군(Navy), 공군(AriForce)은 
   Unit이라는 클래스를 통하여 공통 속성을 정의하고 있다.
   - 공통속성 : 이름(멤버변수 및 getter, setter), 공격(attack() 메서드)
   - 같은 이름이지만 다른 동작을 수행해야 하는 필요성
	-> 모든 군대는 '공격'이라는 공통된 특성을 갖지만, 공격하는 방법은
	육/해/공군이 서로 다르게 처리되어야 한다.
   - 부모 클래스가 갖고 있는 기능을 자식 클래스가 재정의
 	-> 부모 클래스에 정의된 것과 동일한 이름을 갖는 메서드를 자식 클래스가
	정의한 경우, 부모 클래스의 기능은 자식에게 가려진다.
	-> 이렇게 부모의 기능을 재정의 하는 것을 메서드 Override 라 한다.
   - 하나의 이름으로 다양한 효과 얻기
	-> 모든 자식클래스가 동일한 이름의 메서드를 갖게 되므로 각 객체에 대하여
	attack()이라는 이름을 사용하여 서로 다른 형태를 구현할 수 있게 된다.

 1-1. super 키워드
   - 클래스의 상속 관계에서 자식 클래스가 부모 클래스를 가르키는 예약어
   - 사용방법
	-> 멤버변수 이름 앞에 명시
	: 부모 클래스의 멤버변수를 의미한다. 하지만 부모클래스의 멤버변수는
 	이미 모두 상속되어 있기 때문에 이 경우에는 this키워드를 사용하는 것과
	동일한 결과이기에 잘 사용하지 않는다.

	-> 메서드 이름 앞에 명시
	: 부모 클래스의 메서드를 의미한다.
	: 재정의(Override) 되지 않은 메서드
	  - 이미 상속되어 있기 때문에 this 키워드를 사용하는 것과 동일한 결과를 갖는다.
	: 재정의(Override) 된 메서드
	  - Override된 메서드 이름 앞에 사용하게 되면 재정의 되기 이전의 
	  원본 메서드를 의미한다.

	-> 키워드 자체를 메서드처럼 사용
	: super();
	: 부모 클래스의 생성자를 의미한다.

  1-2. 상속 관계에서의 생성자 처리
    - 생성자가 정의된 클래스의 상속 제한
    - 생성자는 상속되지 않는다.
    - 하지만 생성자가 정의된 클래스는 객체 생성을 위해서 생성자 파라미터를 반드시
    전달받아야 하기 때문에, 파라미터를 갖는 생성자가 정의된 클래스를 상속 받게 되면
    에러가 발생된다.

   - 부모 생성자의 강제 호출
   	-> 생성자가 정의된 클래스를 상속받은 경우에는 자식 클래스의 생성자를 통해서
	부모 생성자를 강제로 호출해야 한다.
	-> 부모의 생성자를 호출하는 방법은 super() 키워드를 메서드 이름으로
	사용하는 것이다.

  1-3. 메서드 재정의 과정에서 오타가 발생한 경우
    - 부모 클래스의 say() 메서드를 재정의 하는 과정에서 개발자의 실수로 인해
    "sai()"라고 메서드가 추가되었다면, Java는 새로운 메서드를 추가한 것응로 인식하고,
    특별한 에러를 표시하지 않는다.
    - say() 메서드가 재정의 된 것을 생각한 개발자는 이 경우 의도하지 않은 결과를 
    만나게 될 것이다.

   1-4. @Override 옵션
     - "@Override"은 이 키워드가 명시된 위치 아래에 정의되는 메서드가 부모 클래스에
     존재하지 않을 경우 구문 에러로 처리한다.
     - 부모 클래스의 메서드를 재정의 하고자 할 경우 의도치 않은 실수를 예방하기 위한
     '오타 방지 옵션' 이다.
     - 여러 개의 메서드를 재정의 한다면 재정의 되는 모든 메서드를 위에 각기 명시해야 한다.
